/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Avioes;

import Aeroportos.Aeroportos;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import tp.CriaArquivo;
import tp.DescricaoAviao;
import tp.FaltaObjetosException;

/**
 *
 * @author Dener
 */
public class Avioes extends javax.swing.JInternalFrame {

    /**
     * Creates new form Avioes
     * @param JDP
     */
    public Avioes(JDesktopPane JDP) {
        initComponents();
        this.painelDesktop = JDP;
        Avioes.listaAvioes = new LinkedList<>();
        this.notFound.setVisible(false);
        Avioes.dlm = new DefaultListModel();
        
        jList1.setModel(dlm);
        
        Avioes.listaAtualizada();
        Avioes.atualizaLista();
        
        botoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botaoPesquisarAvioes = new javax.swing.JButton();
        pesquisaAvioestxt = new javax.swing.JTextField();
        addAvioes = new javax.swing.JButton();
        removerAvioes = new javax.swing.JButton();
        editarAvioes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        notFound = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Aviões");

        botaoPesquisarAvioes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifier.png"))); // NOI18N
        botaoPesquisarAvioes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarAvioesActionPerformed(evt);
            }
        });

        addAvioes.setText("Novo");
        addAvioes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAvioesActionPerformed(evt);
            }
        });

        removerAvioes.setText("Remover");
        removerAvioes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerAvioesActionPerformed(evt);
            }
        });

        editarAvioes.setText("Editar");
        editarAvioes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarAvioesActionPerformed(evt);
            }
        });

        DefaultListModel modelo = new DefaultListModel();
        jList1.setModel(modelo);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jList1FocusGained(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Pesquisar por ID:");

        notFound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons 1/error.png"))); // NOI18N
        notFound.setText("Aviao não encontrado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notFound)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(pesquisaAvioestxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(botaoPesquisarAvioes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(addAvioes)
                            .addGap(89, 89, 89)
                            .addComponent(editarAvioes)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(removerAvioes))))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pesquisaAvioestxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoPesquisarAvioes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notFound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAvioes)
                    .addComponent(removerAvioes)
                    .addComponent(editarAvioes))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoPesquisarAvioesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarAvioesActionPerformed
        
        if(DescricaoAviao.lista_descricaoAviao.containsKey( Integer.parseInt(pesquisaAvioestxt.getText()) )) {
            
            dlm.removeAllElements();
            dlm.addElement(DescricaoAviao.lista_descricaoAviao.get( Integer.parseInt( pesquisaAvioestxt.getText() ) ).getId() 
                + " - " 
                + DescricaoAviao.lista_descricaoAviao.get( Integer.parseInt( pesquisaAvioestxt.getText() )).getNome_f());
            
            Avioes.listaAtualizada(DescricaoAviao.lista_descricaoAviao.get( Integer.parseInt( pesquisaAvioestxt.getText() )));
            
            this.notFound.setVisible(false);
            
        } else {
            
            dlm.removeAllElements();
            this.notFound.setVisible(true);
        }
        
    }//GEN-LAST:event_botaoPesquisarAvioesActionPerformed

    private void addAvioesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAvioesActionPerformed
        
        NovoAviao NA = new NovoAviao();
        painelDesktop.add(NA);
        NA.setVisible(true);
        
        int alinhamentoWidth = (painelDesktop.getSize().width -NA.getSize().width ) / 2;
        int alinhamentoHeight = (painelDesktop.getSize().height - NA.getSize().height ) / 2;
        NA.setLocation(alinhamentoWidth, alinhamentoHeight);
        
        
    }//GEN-LAST:event_addAvioesActionPerformed

    private void removerAvioesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerAvioesActionPerformed
        
        int index = jList1.getSelectedIndex(); 
        int tamanho = dlm.getSize();
        
        int id = listaAvioes.get(index).getId();
        
        if(0 !=  JOptionPane.showConfirmDialog(null, 
                "Um avião será removido do sistema.\n Deseja continuar? ", 
                "Remover avião", 
                JOptionPane.YES_NO_OPTION
        )) {
            return;
        }
        
        dlm.remove(index); 
        listaAvioes.remove(index);
        
        if(index == tamanho-1) {
            index--;
        }
        jList1.setSelectedIndex(index);
        jList1.ensureIndexIsVisible(index);
        
        try {
            DescricaoAviao.removeDescricaoAviao(id);
        } catch (IOException ex) {
            Logger.getLogger(Avioes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FaltaObjetosException ex) {
            Logger.getLogger(Avioes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Avioes.listaAtualizada();
        Avioes.atualizaLista();
        
    }//GEN-LAST:event_removerAvioesActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        
        if(evt.getClickCount() == 2) {
            DescricaoAviao DA = Avioes.listaAvioes.get( this.jList1.getSelectedIndex() );
            VerAviao VA = new VerAviao(DA.getNome_f(), DA.getNum_m(), DA.getNum_a(), DA.getId());
            int alinhamentoWidth = (painelDesktop.getSize().width - VA.getSize().width ) / 2;
            int alinhamentoHeight = (painelDesktop.getSize().height - VA.getSize().height ) / 2;
            VA.setLocation(alinhamentoWidth, alinhamentoHeight);
            painelDesktop.add(VA);
            VA.setVisible(true);
        }
        
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        
        botoes();
        
    }//GEN-LAST:event_jList1ValueChanged

    private void editarAvioesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarAvioesActionPerformed
       
    int index = Avioes.listaAvioes.get( jList1.getSelectedIndex() ).getId();
        
        NovoAviao NA = new NovoAviao(index);
        painelDesktop.add(NA);
        NA.setVisible(true);
        
        int alinhamentoWidth = (painelDesktop.getSize().width -NA.getSize().width ) / 2;
        int alinhamentoHeight = (painelDesktop.getSize().height - NA.getSize().height ) / 2;
        NA.setLocation(alinhamentoWidth, alinhamentoHeight);
        
        NA.setFabricanteModeloAssentos(Avioes.listaAvioes.get( jList1.getSelectedIndex() ).getNome_f(), 
                Avioes.listaAvioes.get( jList1.getSelectedIndex() ).getNum_m(), 
                Avioes.listaAvioes.get( jList1.getSelectedIndex() ).getNum_a());
        
    }//GEN-LAST:event_editarAvioesActionPerformed

    private void jList1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusGained
        
        this.notFound.setVisible(false);
        if(pesquisaAvioestxt.getText().equals("")) {
            Avioes.listaAtualizada();
            Avioes.atualizaLista();
        } 
        
        
    }//GEN-LAST:event_jList1FocusGained

    private void botoes() {
        if(dlm.getSize() == 0 || jList1.getSelectedIndex() == -1) {
            removerAvioes.setEnabled(false);
            editarAvioes.setEnabled(false);
        } else {
            removerAvioes.setEnabled(true);
            editarAvioes.setEnabled(true);
        }
    }
    
    public static void listaAtualizada() {
        Avioes.listaAvioes.clear();
        try {
            DescricaoAviao.lista_descricaoAviao = DescricaoAviao.getLista( CriaArquivo.read("aviao") );
            //Avioes.listaAvioes.clear();
            //Avioes.listaAvioes.addAll(DescricaoAviao.lista_descricaoAviao.values());
        } catch (IOException ex) {
            Logger.getLogger(Aeroportos.class.getName()).log(Level.SEVERE, null, ex);
        }
        Avioes.listaAvioes.addAll(DescricaoAviao.lista_descricaoAviao.values());
    }
    
    public static void listaAtualizada(DescricaoAviao a) {
        Avioes.listaAvioes.clear();
        Avioes.listaAvioes.add(a);
    }
    
    public static void atualizaLista() {
        try {
            DescricaoAviao.lista_descricaoAviao = DescricaoAviao.getLista( CriaArquivo.read("aviao") );
            //Avioes.listaAvioes.clear();
            //Avioes.listaAvioes.addAll(DescricaoAviao.lista_descricaoAviao.values());
        } catch (IOException ex) {
            Logger.getLogger(Aeroportos.class.getName()).log(Level.SEVERE, null, ex);
        }
                
        dlm.removeAllElements();
        
        listaAvioes.forEach((aviao) -> {
            dlm.addElement(aviao.getId() + " - " + aviao.getNome_f() + " " + aviao.getNum_m());
        });
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAvioes;
    private javax.swing.JButton botaoPesquisarAvioes;
    private javax.swing.JButton editarAvioes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel notFound;
    private javax.swing.JTextField pesquisaAvioestxt;
    private javax.swing.JButton removerAvioes;
    // End of variables declaration//GEN-END:variables
    private JDesktopPane painelDesktop;
    private static DefaultListModel dlm;
    public static LinkedList<DescricaoAviao> listaAvioes;
}
